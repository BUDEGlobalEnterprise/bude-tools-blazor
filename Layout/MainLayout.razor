@inherits LayoutComponentBase

<MudThemeProvider Theme="@currentTheme" IsDarkMode="@isDarkMode" />
<MudDialogProvider />
<MudSnackbarProvider />
<MudDialogProvider />
<MudSnackbarProvider />
<MudPopoverProvider />
<MudLayout>
    <MudAppBar Color="Color.Primary" Elevation="4">
        <MudIconButton Icon="@Icons.Material.Filled.Menu"
                       Color="Color.Inherit"
                       Edge="Edge.Start"
                       OnClick="@ToggleDrawer" />
        <MudText Typo="Typo.h6" Class="ml-2">Bude-Tools-Blazor</MudText>
        <MudSpacer />
        <MudIconButton Icon="@(isDarkMode ? Icons.Material.Filled.LightMode : Icons.Material.Filled.DarkMode)"
                       Color="Color.Inherit"
                       OnClick="@ToggleTheme"
                       Title="Toggle Theme" />
    </MudAppBar>

    <MudDrawer @bind-Open="isDrawerOpen" Variant="DrawerVariant.Responsive" Elevation="1">
        <MudNavMenu>
           
            
            <MudNavLink Href="/home" Icon="@Icons.Material.Filled.QrCode2">
                QR Generator
            </MudNavLink>
            <MudNavLink Href="/about" Icon="@Icons.Material.Filled.RoundaboutRight">
                About
            </MudNavLink>
        </MudNavMenu>
    </MudDrawer>

    <MudMainContent>
        <MudContainer MaxWidth="MaxWidth.False" Class="p-4">
            @Body
        </MudContainer>
    </MudMainContent>
</MudLayout>

@code {
    // State variables for the responsive drawer and dark mode
    private bool isDrawerOpen = false;
    private bool isDarkMode = false;

    // Define the application's theme with separate light and dark palettes
    private MudTheme currentTheme = new MudTheme()
        {
            PaletteLight = new PaletteLight()
            {
                Primary = Colors.Blue.Default,
                Secondary = Colors.Green.Accent4
            },
            PaletteDark = new PaletteDark()
            {
                Primary = Colors.Blue.Lighten1,
                Secondary = Colors.Green.Accent2,
            }
        };

    // Method to toggle the navigation drawer's open/close state
    private void ToggleDrawer()
    {
        isDrawerOpen = !isDrawerOpen;
    }

    // Method to toggle the dark mode state
    private void ToggleTheme()
    {
        isDarkMode = !isDarkMode;
    }
}
